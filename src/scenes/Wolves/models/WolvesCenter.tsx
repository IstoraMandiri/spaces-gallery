/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import * as THREE from "three";
import { useTrimeshCollision } from "../../../@spacesvr/services/collision";
import { BufferGeometry } from "three";

type GLTFResult = GLTF & {
  nodes: {
    ["550"]: THREE.Mesh;
    ["440"]: THREE.Mesh;
    ["330"]: THREE.Mesh;
    ["220"]: THREE.Mesh;
    ["110"]: THREE.Mesh;
    ["50"]: THREE.Mesh;
    ["40"]: THREE.Mesh;
    ["30"]: THREE.Mesh;
    ["20"]: THREE.Mesh;
    ["10"]: THREE.Mesh;
    collider: THREE.Mesh;
  };
  materials: {
    ["font color"]: THREE.MeshStandardMaterial;
    ["50"]: THREE.MeshStandardMaterial;
    ["40"]: THREE.MeshStandardMaterial;
    ["30"]: THREE.MeshStandardMaterial;
    ["20"]: THREE.MeshStandardMaterial;
    ["10"]: THREE.MeshStandardMaterial;
    collider: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/WolvesCenter3-1604008965/UVPercentageTests_02.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;

  // materials.Mat.side = THREE.DoubleSide;
  // materials.Mat.metalness = 0.01;
  const SCALE = 6;

  useTrimeshCollision(
    (nodes.collider.geometry as BufferGeometry)
      .translate(0, 0.813, 0)
      .scale(SCALE, SCALE, SCALE)
  );

  return (
    <group ref={group} {...props}>
      <group scale={[SCALE, SCALE, SCALE]}>
        <group position-y={0.813}>
          <mesh
            material={materials["font color"]}
            geometry={nodes["550"].geometry}
            name="550"
          />
          <mesh
            material={materials["font color"]}
            geometry={nodes["440"].geometry}
            name="440"
          />
          <mesh
            material={materials["font color"]}
            geometry={nodes["330"].geometry}
            name="330"
          />
          <mesh
            material={materials["font color"]}
            geometry={nodes["220"].geometry}
            name="220"
          />
          <mesh
            material={materials["font color"]}
            geometry={nodes["110"].geometry}
            name="110"
          />
          <mesh
            material={materials["50"]}
            geometry={nodes["50"].geometry}
            name="50"
          />
          <mesh
            material={materials["40"]}
            geometry={nodes["40"].geometry}
            name="40"
          />
          <mesh
            material={materials["30"]}
            geometry={nodes["30"].geometry}
            name="30"
          />
          <mesh
            material={materials["20"]}
            geometry={nodes["20"].geometry}
            name="20"
          />
          <mesh
            material={materials["10"]}
            geometry={nodes["10"].geometry}
            name="10"
          />
          <mesh
            material={materials.collider}
            geometry={nodes.collider.geometry}
            name="collider"
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
