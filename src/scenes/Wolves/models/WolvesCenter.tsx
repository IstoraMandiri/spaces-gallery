/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import * as THREE from "three";
import { useTrimeshCollision } from "../../../@spacesvr/services/collision";
import { BufferGeometry } from "three";

type GLTFResult = GLTF & {
  nodes: {
    COLLIDER: THREE.Mesh;
    TERRAIN: THREE.Mesh;
  };
  materials: {
    Mat: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/WolvesCenter1-1603956215/50uv180m.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;

  materials.Mat.side = THREE.DoubleSide;
  materials.Mat.metalness = 0.01;
  const SCALE = 6;

  useTrimeshCollision(
    (nodes.COLLIDER.geometry as BufferGeometry)
      .translate(0, -0.6654, 0)
      .translate(0, 0.813, 0)
      .scale(SCALE, SCALE, SCALE)
  );

  return (
    <group ref={group} {...props}>
      <group scale={[SCALE, SCALE, SCALE]}>
        <group position-y={0.813}>
          {/*<mesh*/}
          {/*  material={nodes.COLLIDER.material}*/}
          {/*  geometry={nodes.COLLIDER.geometry}*/}
          {/*  name="COLLIDER"*/}
          {/*  position={[0, -0.6654, 0]}*/}
          {/*/>*/}
          <mesh
            material={materials.Mat}
            geometry={nodes.TERRAIN.geometry}
            name="TERRAIN"
            position={[0, -0.8089, 0]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
