/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

type GLTFResult = GLTF & {
  nodes: {
    Sphere3: THREE.Mesh;
    Sphere2: THREE.Mesh;
    Sphere: THREE.Mesh;
    Sphere1: THREE.Mesh;
  };
  materials: {
    ["Sphere.2"]: THREE.MeshStandardMaterial;
    ["Sphere.3"]: THREE.MeshStandardMaterial;
    ["Sphere.1"]: THREE.MeshStandardMaterial;
    Sphere: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/SpacesVR4-1604654936/spacesvr_03.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;
  return (
    <group ref={group} {...props}>
      <group>
        <mesh
          material={materials["Sphere.2"]}
          geometry={nodes.Sphere3.geometry}
          name="Sphere3"
          position={[0.6928, 1.5157, 10.0922]}
          rotation={[-Math.PI, 0, -Math.PI]}
        />
        <mesh
          material={materials["Sphere.3"]}
          geometry={nodes.Sphere2.geometry}
          name="Sphere2"
          position={[-11.5352, 1.5157, -2.3516]}
          rotation={[0, 1.5705, 0]}
        />
        <mesh
          material={materials["Sphere.1"]}
          geometry={nodes.Sphere.geometry}
          name="Sphere"
          position={[12.3248, 1.5157, -2.3516]}
          rotation={[0, -1.5705, 0]}
        />
        <mesh
          material={materials.Sphere}
          geometry={nodes.Sphere1.geometry}
          name="Sphere1"
          position={[-0.0499, 1.5157, -14.6316]}
        />
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
