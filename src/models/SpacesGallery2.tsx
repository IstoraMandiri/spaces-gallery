/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useLoader } from "react-three-fiber";
import { GLTFLoader, GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { draco } from "drei";
import { loadModel } from "../services/loader";
import { ModelProps } from "../types/model";
import { useCompoundBody } from "use-cannon";

type GLTFResult = GLTF & {
  nodes: {
    Bezier6: THREE.Mesh;
    Bezier5: THREE.Mesh;
    Bezier4: THREE.Mesh;
    Bezier3: THREE.Mesh;
    Bezier2: THREE.Mesh;
    Bezier1: THREE.Mesh;
    Extrude: THREE.Mesh;
    Cap_2: THREE.Mesh;
    Extrude1: THREE.Mesh;
    Cap_1: THREE.Mesh;
    Disc: THREE.Mesh;
  };
  materials: {
    ["Mat.1"]: THREE.MeshStandardMaterial;
    Mat: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: ModelProps) {
  const { useEnvStore } = props;
  const setLoading = useEnvStore((st) => st.setLoading);
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useLoader<GLTFResult>(
    GLTFLoader,
    "https://dwvo2npct47gg.cloudfront.net/models/awge-space/SpacesGallery2/SpacesGallery2.gltf",
    loadModel(setLoading)
  );
  materials["Mat.1"].metalness = 0;
  materials["Mat.1"].side = THREE.DoubleSide;

  return (
    <group name="gallery" ref={group} {...props} dispose={null}>
      <group scale={[400, 400, 400]}>
        <group position={[-0.000086, 0.009574, 0.000004]}>
          <mesh
            material={materials["Mat.1"]}
            geometry={nodes.Bezier6.geometry}
            position={[-0.053044, 0, 0.030721]}
            rotation={[Math.PI / 2, 0, Math.PI / 3]}
          />
          <mesh
            material={materials["Mat.1"]}
            geometry={nodes.Bezier5.geometry}
            position={[-0.053272, 0, -0.030442]}
            rotation={[Math.PI / 2, 0, 2.094395]}
          />
          <mesh
            material={materials["Mat.1"]}
            geometry={nodes.Bezier4.geometry}
            position={[-0.000023, 0, -0.061329]}
            rotation={[Math.PI / 2, 0, -Math.PI]}
          />
          <mesh
            material={materials["Mat.1"]}
            geometry={nodes.Bezier3.geometry}
            position={[0.053208, 0, -0.030818]}
            rotation={[Math.PI / 2, 0, -2.094395]}
          />
          <mesh
            material={materials["Mat.1"]}
            geometry={nodes.Bezier2.geometry}
            position={[0.053046, 0, 0.030553]}
            rotation={[Math.PI / 2, 0, -Math.PI / 3]}
          />
          <mesh
            material={materials["Mat.1"]}
            geometry={nodes.Bezier1.geometry}
            position={[0.000086, 0, 0.061314]}
            rotation={[Math.PI / 2, 0, 0]}
          />
        </group>
        <mesh material={materials["Mat.1"]} geometry={nodes.Extrude.geometry}>
          <mesh
            material={materials["Mat.1"]}
            geometry={nodes.Cap_1.geometry}
            position={[0, -0.0005, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <mesh
            material={materials["Mat.1"]}
            geometry={nodes.Cap_2.geometry}
            position={[0, -0.0005, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
          />
        </mesh>
        <mesh material={materials["Mat.1"]} geometry={nodes.Extrude1.geometry}>
          <mesh
            material={materials["Mat.1"]}
            geometry={nodes.Cap_1.geometry}
            rotation={[-Math.PI / 2, 0, 0]}
          />
        </mesh>
        <mesh
          material={materials.Mat}
          geometry={nodes.Disc.geometry}
          position={[0, -0.000262, 0]}
        />
      </group>
    </group>
  );
}
