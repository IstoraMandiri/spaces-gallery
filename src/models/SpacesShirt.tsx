/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from "three";
import React, { useCallback, useEffect, useRef, useState } from "react";
import { useLoader } from "react-three-fiber";
import { GLTFLoader, GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { loadModel } from "../services/loader";
import { UseStore } from "zustand";
import { isMobile } from "react-device-detect";

type GLTFResult = GLTF & {
  nodes: {
    Body_Front1: THREE.Mesh;
  };
  materials: {
    ["New Shirt"]: THREE.MeshStandardMaterial;
  };
};

type ShirtProps = {
  useEnvStore: UseStore<any>;
  overlay: boolean;
  setOverlay: React.Dispatch<React.SetStateAction<boolean>>;
};

export default function SpacesShirt(props: ShirtProps) {
  const { useEnvStore, overlay, setOverlay } = props;

  const setLoading = useEnvStore((st) => st.setLoading);
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useLoader<GLTFResult>(
    GLTFLoader,
    "https://spaces-gallery-assets.s3-us-west-1.amazonaws.com/models/SpacesShop/shirt.glb",
    loadModel(setLoading)
  );

  const onClick = useCallback(() => {
    setOverlay(!overlay);
  }, [overlay]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={[60, 60, 60]}>
        {isMobile ? (
          <mesh
            onPointerDown={onClick}
            material={materials["New Shirt"]}
            geometry={nodes.Body_Front1.geometry}
          />
        ) : (
          <mesh
            onClick={onClick}
            material={materials["New Shirt"]}
            geometry={nodes.Body_Front1.geometry}
          />
        )}
      </group>
    </group>
  );
}
