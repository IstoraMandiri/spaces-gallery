/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useFrame, useLoader } from "react-three-fiber";
import { GLTFLoader, GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { loadModel } from "../services/loader";
import { ModelProps } from "../types/model";

type GLTFResult = GLTF & {
  nodes: {
    Body_Front1: THREE.Mesh;
  };
  materials: {
    ["New Shirt"]: THREE.MeshStandardMaterial;
  };
};

export default function SpacesShirt(props: ModelProps) {
  const { useEnvStore } = props;

  const setLoading = useEnvStore((st) => st.setLoading);
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useLoader<GLTFResult>(
    GLTFLoader,
    "https://spaces-gallery-assets.s3-us-west-1.amazonaws.com/models/SpacesShop/shirt.glb",
    loadModel(setLoading)
  );

  // Auto Rotate
  // useFrame(({ clock }) => {
  //   if (group.current) {
  //     group.current.rotation.y = clock.getElapsedTime() / 10;
  //   }
  // });

  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={[25, 25, 25]}>
        <mesh
          material={materials["New Shirt"]}
          geometry={nodes.Body_Front1.geometry}
          castShadow
        />
      </group>
    </group>
  );
}
