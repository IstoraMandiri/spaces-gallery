/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useLoader } from "react-three-fiber";
import { GLTFLoader, GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { loadModel } from "../services/loader";
import { ModelProps } from "../types/model";

type GLTFResult = GLTF & {
  nodes: {
    GALLERYMESH: THREE.Mesh;
  };
  materials: {
    INSIDE: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: ModelProps) {
  const { useEnvStore } = props;
  const setLoading = useEnvStore((st) => st.setLoading);
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useLoader<GLTFResult>(
    GLTFLoader,
    "https://gltfloaders.s3-us-west-1.amazonaws.com/SpacesGallery4.gltf",
    loadModel(setLoading)
  );
  materials["INSIDE"].metalness = 0;
  materials["INSIDE"].side = THREE.DoubleSide;
  return (
    <group ref={group} {...props} dispose={null}>
      <group
        rotation={[Math.PI, 0, 0]}
        position={[0, 1, 0]}
        scale={[100, 100, 100]}
      >
        <mesh
          material={materials.INSIDE}
          geometry={nodes.GALLERYMESH.geometry}
          rotation={[-Math.PI, 0, 0]}
        />
      </group>
    </group>
  );
}
