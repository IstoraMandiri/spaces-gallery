/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useFrame, useLoader } from "react-three-fiber";
import { GLTFLoader, GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { loadModel } from "../../services/loader";
import { ModelProps } from "../core/types/model";
import { Color } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Plane01: THREE.Mesh;
    Line01: THREE.Mesh;
    GeoSphere01: THREE.Mesh;
    Line02: THREE.Mesh;
  };
  materials: {
    ["3_-_Default"]: THREE.MeshStandardMaterial;
    balloon_tip: THREE.MeshStandardMaterial;
    balloon: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: ModelProps & { seed: number }) {
  const { useEnvStore, seed } = props;
  const setLoading = useEnvStore((st) => st.setLoading);

  const group = useRef<THREE.Group>();
  const { nodes, materials } = useLoader<GLTFResult>(
    GLTFLoader,
    "https://d27rt3a60hh1lx.cloudfront.net/models/SimpleBalloon/SimpleBalloon.glb",
    loadModel(setLoading)
  );

  const COLOR = new Color().setHSL(seed * 360, 0.9, 0.6);
  const Y_OFFSET = (seed - 0.5) * (seed - 0.5) * 2;
  const SCALE = seed * 2.5;

  useFrame(({ clock }) => {
    if (group.current) {
      group.current.position.y = Math.sin(clock.getElapsedTime() * seed);
    }
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, Y_OFFSET, 0]}>
        <group
          scale={[0.01 * SCALE, 0.01 * SCALE, 0.01 * SCALE]}
          rotation={[-Math.PI / 2, 0, 0]}
          position={[0, -3.5, 0]}
        >
          {/*<mesh*/}
          {/*  material={materials["3_-_Default"]}*/}
          {/*  geometry={nodes.Plane01.geometry}*/}
          {/*/>*/}
          <mesh
            material={materials.balloon_tip}
            geometry={nodes.Line01.geometry}
          />
          <mesh geometry={nodes.GeoSphere01.geometry}>
            <meshPhongMaterial attach="material" color={COLOR} />
          </mesh>
          <mesh material={materials.balloon} geometry={nodes.Line02.geometry} />
        </group>
      </group>
    </group>
  );
}
